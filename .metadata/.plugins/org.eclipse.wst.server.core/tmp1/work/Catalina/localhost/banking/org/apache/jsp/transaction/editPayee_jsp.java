/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.96
 * Generated at: 2024-10-13 19:25:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.transaction;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import config.dbconnect;

public final class editPayee_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("config.dbconnect");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Edit Bill Payee | EasyBank: Banking at Your Fingertips\r\n");
      out.write("    </title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../assets/style.css\">\r\n");
      out.write("    <script src=\"https://kit.fontawesome.com/72fb3712df.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("    <script>\r\n");
      out.write("        function validateForm() {\r\n");
      out.write("            alert(\"Submitting form with PayeeID: \" + document.querySelector('input[name=\"PayeeID\"]').value);\r\n");
      out.write("            return true; // Ensure form continues to submit\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
 
	if (session.getAttribute("name") == null) {
		response.sendRedirect("../login.jsp");
		return;
	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("    <!-- Include Header JSP -->\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../inc/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"flex\">\r\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../inc/acc-dash.jsp", out, false);
      out.write("\r\n");
      out.write("       \r\n");
      out.write("        \r\n");
      out.write("        <div class=\"flex-col content-wrapper\">\r\n");
      out.write("\r\n");
      out.write("            <ul class=\"bredcrumb\">\r\n");
      out.write("                <li><a href=\"../home/home.jsp\">Home</a></li>\r\n");
      out.write("                <li><i class=\"fa-solid fa-chevron-right\"></i></li>\r\n");
      out.write("                <li><a href=\"index.jsp\">Fund Transfer Services</a></li>\r\n");
      out.write("                <li><i class=\"fa-solid fa-chevron-right\"></i></li>\r\n");
      out.write("                <li>Edit Favorite Payee</li>\r\n");
      out.write("                \r\n");
      out.write("            </ul>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"container\">\r\n");
      out.write("                <div class=\"cardG flex-col\">\r\n");
      out.write("                    <h2 class=\"text-center\">Edit Favorite Payee</h2>\r\n");
      out.write("\r\n");
      out.write("                    <!-- Display error message if it exists -->\r\n");
      out.write("                    ");
 if (request.getAttribute("errorMessage") != null) { 
      out.write("\r\n");
      out.write("                        <div class=\"error-message\" style=\"color: red; text-align: center;\">\r\n");
      out.write("                            ");
      out.print( request.getAttribute("errorMessage") );
      out.write("\r\n");
      out.write("                        </div>\r\n");
      out.write("                    ");
 } 
      out.write("\r\n");
      out.write("                    \r\n");
      out.write("                     ");

                        // Get payeeId from request
                        String payeeId = request.getParameter("payeeId");

                        // Initialize variables for payee data
                        String payeeName = "";
                        String payeeNickname = "";
                        String payeeAccountNo = "";
                        String bank = "";
                        String branch = "";

                        // Fetch payee data from database using payeeId
                        if (payeeId != null) {
                            String query = "SELECT * FROM payees WHERE PayeeId = ?";
                            try (Connection conn = dbconnect.connect();
                                 PreparedStatement stmt = conn.prepareStatement(query)) {
                                stmt.setString(1, payeeId);
                                ResultSet rs = stmt.executeQuery();

                                if (rs.next()) {
                                	payeeName = rs.getString("PayeeName");
                               		payeeNickname = rs.getString("PayeeNickname");
                                	payeeAccountNo = rs.getString("PayeeAccountNo");
                                	bank = rs.getString("Bank");
                                	branch = rs.getString("Branch");
                                   
                                }
                            } catch (SQLException e) {
                                e.printStackTrace();
                            }
                        }
                        
      out.write("\r\n");
      out.write("\r\n");
      out.write("                    <form action=\"");
      out.print( request.getContextPath() );
      out.write("/EditPayee\" method=\"post\">\r\n");
      out.write("                        <input type=\"hidden\" name=\"PayeeId\" value=\"");
      out.print( payeeId );
      out.write("\"> <!-- Ensure casing is correct -->\r\n");
      out.write("                        \r\n");
      out.write("                        <div class=\"flex flex-col\">\r\n");
      out.write("                            <div class=\"flex flex-row form\">\r\n");
      out.write("                        <div class=\"form-item flex flex-col\">\r\n");
      out.write("                            <label for=\"PayeeAccountNo\"> Beneficiary Account Number <span class=\"required\">*</span></label>\r\n");
      out.write("                            <input type=\"text\" name=\"PayeeAccountNo\" value=\"");
      out.print( payeeAccountNo );
      out.write("\" required readonly>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                                <div class=\"form-item flex flex-col\">\r\n");
      out.write("                                    <label for=\"PayeeName\">Beneficiary Name<span class=\"required\">*</span></label>\r\n");
      out.write("                                    <input type=\"text\" name=\"PayeeName\" value=\"");
      out.print( payeeName );
      out.write("\"  required>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                            <div class=\"flex flex-row form\">\r\n");
      out.write("                                <div class=\"form-item flex flex-col\">\r\n");
      out.write("                                    <label for=\"PayeeNickname\">Beneficiary Nickname<span class=\"required\">*</span></label>\r\n");
      out.write("                                    <input type=\"text\" name=\"PayeeNickname\" value=\"");
      out.print( payeeNickname );
      out.write("\" required>\r\n");
      out.write("                                   \r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            \r\n");
      out.write("\r\n");
      out.write("                            \r\n");
      out.write("                            \r\n");
      out.write("                            <div class=\"flex flex-row form\">\r\n");
      out.write("                        <div class=\"form-item flex flex-col\">\r\n");
      out.write("                            <label for=\"Bank\">  Bank Name <span class=\"required\">*</span></label>							\r\n");
      out.write("							<select name=\"Bank\" placeholder=\"Bank\" required>\r\n");
      out.write("							    <option value=\"\">Select the Bank</option>\r\n");
      out.write("							    <option value=\"BOC\" ");
      out.print( "BOC".equals(bank) ? "selected" : "" );
      out.write(">Bank of Ceylon (BOC)</option>\r\n");
      out.write("							    <option value=\"PeoplesBank\" ");
      out.print( "PeoplesBank".equals(bank) ? "selected" : "" );
      out.write(">People's Bank</option>\r\n");
      out.write("							    <option value=\"CommercialBank\" ");
      out.print( "CommercialBank".equals(bank) ? "selected" : "" );
      out.write(">Commercial Bank of Ceylon</option>\r\n");
      out.write("							    <option value=\"HNB\" ");
      out.print( "HNB".equals(bank) ? "selected" : "" );
      out.write(">Hatton National Bank (HNB)</option>\r\n");
      out.write("							    <option value=\"SampathBank\" ");
      out.print( "SampathBank".equals(bank) ? "selected" : "" );
      out.write(">Sampath Bank</option>\r\n");
      out.write("							    <option value=\"NSB\" ");
      out.print( "NSB".equals(bank) ? "selected" : "" );
      out.write(">National Savings Bank (NSB)</option>\r\n");
      out.write("							    <option value=\"SeylanBank\" ");
      out.print( "SeylanBank".equals(bank) ? "selected" : "" );
      out.write(">Seylan Bank</option>\r\n");
      out.write("							    <option value=\"NationsTrustBank\" ");
      out.print( "NationsTrustBank".equals(bank) ? "selected" : "" );
      out.write(">Nations Trust Bank</option>\r\n");
      out.write("							    <option value=\"DFCC\" ");
      out.print( "DFCC".equals(bank) ? "selected" : "" );
      out.write(">DFCC Bank</option>\r\n");
      out.write("							    <option value=\"UnionBank\" ");
      out.print( "UnionBank".equals(bank) ? "selected" : "" );
      out.write(">Union Bank of Colombo</option>\r\n");
      out.write("							    <option value=\"AmanaBank\" ");
      out.print( "AmanaBank".equals(bank) ? "selected" : "" );
      out.write(">Amana Bank</option>\r\n");
      out.write("							    <option value=\"PanAsiaBank\" ");
      out.print( "PanAsiaBank".equals(bank) ? "selected" : "" );
      out.write(">Pan Asia Bank</option>\r\n");
      out.write("							    <option value=\"CargillsBank\" ");
      out.print( "CargillsBank".equals(bank) ? "selected" : "" );
      out.write(">Cargills Bank</option>\r\n");
      out.write("							    <option value=\"SCB\" ");
      out.print( "SCB".equals(bank) ? "selected" : "" );
      out.write(">Standard Chartered Bank (Sri Lanka)</option>\r\n");
      out.write("							    <option value=\"HSBC\" ");
      out.print( "HSBC".equals(bank) ? "selected" : "" );
      out.write(">HSBC (Sri Lanka)</option>\r\n");
      out.write("							</select>\r\n");
      out.write("							\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"form-item flex flex-col\">\r\n");
      out.write("                            <label for=\"Branch\"> Branch<span class=\"required\">*</span></label>\r\n");
      out.write("							<select name=\"Branch\" placeholder=\"Branch\" required>\r\n");
      out.write("						    <option value=\"\">Select the Branch</option>\r\n");
      out.write("						    <option value=\"ColomboMain\" ");
      out.print( "ColomboMain".equals(branch) ? "selected" : "" );
      out.write(">Colombo Main Branch</option>\r\n");
      out.write("						    <option value=\"Kandy\" ");
      out.print( "Kandy".equals(branch) ? "selected" : "" );
      out.write(">Kandy Branch</option>\r\n");
      out.write("						    <option value=\"Nugegoda\" ");
      out.print( "Nugegoda".equals(branch) ? "selected" : "" );
      out.write(">Nugegoda Branch</option>\r\n");
      out.write("						    <option value=\"Negombo\" ");
      out.print( "Negombo".equals(branch) ? "selected" : "" );
      out.write(">Negombo Branch</option>\r\n");
      out.write("						    <option value=\"Galle\" ");
      out.print( "Galle".equals(branch) ? "selected" : "" );
      out.write(">Galle Branch</option>\r\n");
      out.write("						    <option value=\"Kurunegala\" ");
      out.print( "Kurunegala".equals(branch) ? "selected" : "" );
      out.write(">Kurunegala Branch</option>\r\n");
      out.write("						    <option value=\"Matara\" ");
      out.print( "Matara".equals(branch) ? "selected" : "" );
      out.write(">Matara Branch</option>\r\n");
      out.write("						    <option value=\"Jaffna\" ");
      out.print( "Jaffna".equals(branch) ? "selected" : "" );
      out.write(">Jaffna Branch</option>\r\n");
      out.write("						    <option value=\"Batticaloa\" ");
      out.print( "Batticaloa".equals(branch) ? "selected" : "" );
      out.write(">Batticaloa Branch</option>\r\n");
      out.write("						    <option value=\"Ratnapura\" ");
      out.print( "Ratnapura".equals(branch) ? "selected" : "" );
      out.write(">Ratnapura Branch</option>\r\n");
      out.write("						    <option value=\"Maharagama\" ");
      out.print( "Maharagama".equals(branch) ? "selected" : "" );
      out.write(">Maharagama Branch</option>\r\n");
      out.write("						    <option value=\"Anuradhapura\" ");
      out.print( "Anuradhapura".equals(branch) ? "selected" : "" );
      out.write(">Anuradhapura Branch</option>\r\n");
      out.write("						    <option value=\"Badulla\" ");
      out.print( "Badulla".equals(branch) ? "selected" : "" );
      out.write(">Badulla Branch</option>\r\n");
      out.write("						    <option value=\"Avissawella\" ");
      out.print( "Avissawella".equals(branch) ? "selected" : "" );
      out.write(">Avissawella Branch</option>\r\n");
      out.write("						    <option value=\"Panadura\" ");
      out.print( "Panadura".equals(branch) ? "selected" : "" );
      out.write(">Panadura Branch</option>\r\n");
      out.write("						    <option value=\"Kalutara\" ");
      out.print( "Kalutara".equals(branch) ? "selected" : "" );
      out.write(">Kalutara Branch</option>\r\n");
      out.write("						    <option value=\"Chilaw\" ");
      out.print( "Chilaw".equals(branch) ? "selected" : "" );
      out.write(">Chilaw Branch</option>\r\n");
      out.write("						    <option value=\"Vavuniya\" ");
      out.print( "Vavuniya".equals(branch) ? "selected" : "" );
      out.write(">Vavuniya Branch</option>\r\n");
      out.write("						    <option value=\"Trincomalee\" ");
      out.print( "Trincomalee".equals(branch) ? "selected" : "" );
      out.write(">Trincomalee Branch</option>\r\n");
      out.write("						    <option value=\"Gampaha\" ");
      out.print( "Gampaha".equals(branch) ? "selected" : "" );
      out.write(">Gampaha Branch</option>\r\n");
      out.write("						</select>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                            \r\n");
      out.write("                            <div class=\"flex\" style=\"margin-top: 10px\">\r\n");
      out.write("                               <button type=\"submit\" class=\"btn btn-primary\" style=\"margin-right: 15px; width:100px\">Update</button>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        \r\n");
      out.write("                        \r\n");
      out.write("                    </form>\r\n");
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
